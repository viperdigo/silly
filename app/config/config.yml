imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
framework:
#    session:
#        handler_id: session.handler.native_file
#        save_path: "%kernel.root_dir%/sessions"
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

doctrine_migrations:
    dir_name: %kernel.root_dir%/DoctrineMigrations
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

# Twig Configuration

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
               enum: string
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        default_entity_manager:   default
        entity_managers:
            default:
                connection:       default
                mappings:
                    BackendBundle: ~
                    CoreBundle: ~
                    UserBundle: ~
                result_cache_driver:
                    type:           memcache
                    host:           %doctrine_memcached_host%
                    port:           %doctrine_memcached_port%
                    instance_class: Memcache
                    class:          Doctrine\Common\Cache\MemcacheCache
                dql:
                    datetime_functions:
                        date:           Oro\ORM\Query\AST\Functions\SimpleFunction
                        time:           Oro\ORM\Query\AST\Functions\SimpleFunction
                        timestamp:      Oro\ORM\Query\AST\Functions\SimpleFunction
                        convert_tz:     Oro\ORM\Query\AST\Functions\DateTime\ConvertTz
                    numeric_functions:
                        timestampdiff:  Oro\ORM\Query\AST\Functions\Numeric\TimestampDiff
                        dayofyear:      Oro\ORM\Query\AST\Functions\SimpleFunction
                        dayofmonth:     Oro\ORM\Query\AST\Functions\SimpleFunction
                        dayofweek:      Oro\ORM\Query\AST\Functions\SimpleFunction
                        week:           Oro\ORM\Query\AST\Functions\SimpleFunction
                        day:            Oro\ORM\Query\AST\Functions\SimpleFunction
                        hour:           Oro\ORM\Query\AST\Functions\SimpleFunction
                        minute:         Oro\ORM\Query\AST\Functions\SimpleFunction
                        month:          Oro\ORM\Query\AST\Functions\SimpleFunction
                        quarter:        Oro\ORM\Query\AST\Functions\SimpleFunction
                        second:         Oro\ORM\Query\AST\Functions\SimpleFunction
                        year:           Oro\ORM\Query\AST\Functions\SimpleFunction
                        sign:           Oro\ORM\Query\AST\Functions\Numeric\Sign
                        pow:            Oro\ORM\Query\AST\Functions\Numeric\Pow
                    string_functions:
                        group_concat:   Oro\ORM\Query\AST\Functions\String\GroupConcat
                        cast:           Oro\ORM\Query\AST\Functions\Cast

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

stof_doctrine_extensions:
    default_locale: pt_BR
    orm:
        default:
          sluggable: true
          timestampable: true

assetic:
    debug:          %kernel.debug%
    use_controller: false
    ruby: %ruby_bin%
    filters:
        cssrewrite: ~
        sass: ~
        compass:
          bin: %compass_bin%
          apply_to: "\.(scss|sas)$"
#        less:
#            node: /usr/local/bin/node
#            node_paths: [/usr/local/lib/node_modules]
#            apply_to: "\.less$"

twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

    form:
        resources:
            - '::form.html.twig'

knp_menu:
    twig:  # use "twig: false" to disable the Twig extension and the TwigRenderer
        template: knp_menu.html.twig
    templating: true # if true, enables the helper for PHP templates
    default_renderer: twig # The renderer to use, list is also available by default

knp_snappy:
    pdf:
        enabled:    true
        binary:     /usr/local/bin/wkhtmltopdf
        options:    []
    image:
        enabled:    true
        binary:     /usr/local/bin/wkhtmltoimage
        options:    []
    temporary_folder: %kernel.cache_dir%/snappy

services:
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: ProjectSilly\UserBundle\Entity\User
#    change_password:
#        form:
#            type:               fos_user_change_password
#            name:               fos_user_change_password_form
#            validation_groups:  [ChangePassword, Default]
#    registration:
#        form:
#            type:               plentypark_user_registration
#            name:               fos_user_registration_form
#            validation_groups:  [Registration, Default]
#    resetting:
#        token_ttl: 86400
#        form:
#            type:               fos_user_resetting
#            name:               fos_user_resetting_form
#            validation_groups:  [ResetPassword, Default]
